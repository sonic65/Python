{"name": "test_excel[modName}}else if(mType==\"[object Array]\"){for(var i=0,len=modName.length;i<len;i++){if(modName[i].indexOf(\":\")<0){modName[i]=thi]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'modName}}el...odName[i]=thi' == '<Response [200]>'\n  +b'modName}}else if(mType==\"[object Array]\"){for(var i=0,len=modName.length;i<len;i++){if(modName[i].indexOf(\":\")<0){modName[i]=thi'\n  -'<Response [200]>'", "trace": "data = b'modName}}else if(mType==\"[object Array]\"){for(var i=0,len=modName.length;i<len;i++){if(modName[i].indexOf(\":\")<0){modName[i]=thi'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b'modName}}el...odName[i]=thi' == '<Response [200]>'\nE         +b'modName}}else if(mType==\"[object Array]\"){for(var i=0,len=modName.length;i<len;i++){if(modName[i].indexOf(\":\")<0){modName[i]=thi'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663323744, "stop": 1586663323744, "uuid": "cc2ffc68-1469-4f02-958e-4268c81e38ac", "historyId": "2d0d6d096e091f500393515db5538c99", "testCaseId": "ce0ead08c50efe63f5a0aed4be9b3468", "fullName": "allure.test#test_excel[modName}}else if(mType==\"[object Array]\"){for(var i=0,len=modName.length;i<len;i++){if(modName[i].indexOf(\":\")<0){modName", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}