{"name": "test_excel[item]={}}for(var key in config[item]){if(config[item].hasOwnProperty(key)&&config[item][key]){\namd[item][key]=config[item][key]}]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'item]={}}fo...g[item][key]}' == '<Response [200]>'\n  +b'item]={}}for(var key in config[item]){if(config[item].hasOwnProperty(key)&&config[item][key]){\\namd[item][key]=config[item][key]}'\n  -'<Response [200]>'", "trace": "data = b'item]={}}for(var key in config[item]){if(config[item].hasOwnProperty(key)&&config[item][key]){\\namd[item][key]=config[item][key]}'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       AssertionError: assert b'item]={}}fo...g[item][key]}' == '<Response [200]>'\nE         +b'item]={}}for(var key in config[item]){if(config[item].hasOwnProperty(key)&&config[item][key]){\\namd[item][key]=config[item][key]}'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663323028, "stop": 1586663323028, "uuid": "fdc19179-ef56-41b6-b3dc-73b6e59d0f2c", "historyId": "e89c5988b688f22f818cc0d9b9f76279", "testCaseId": "0822c2925cad919f07601a6c7ac33939", "fullName": "allure.test#test_excel[item]={}}for(var key in config[item]){if(config[item].hasOwnProperty(key)&&config[item][key]){\namd[item][key]=config[item]", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}