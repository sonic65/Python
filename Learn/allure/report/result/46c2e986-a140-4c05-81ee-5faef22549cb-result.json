{"name": "test_excel[unction(){var amd={keys:{},addPaths:function(opt){if(typeof opt!==\"object\"){return}for(var key in opt){if(opt.hasOwnProperty(key]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'unction(){v...nProperty(key' == '<Response [200]>'\n  +b'unction(){var amd={keys:{},addPaths:function(opt){if(typeof opt!==\"object\"){return}for(var key in opt){if(opt.hasOwnProperty(key'\n  -'<Response [200]>'", "trace": "data = b'unction(){var amd={keys:{},addPaths:function(opt){if(typeof opt!==\"object\"){return}for(var key in opt){if(opt.hasOwnProperty(key'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b'unction(){v...nProperty(key' == '<Response [200]>'\nE         +b'unction(){var amd={keys:{},addPaths:function(opt){if(typeof opt!==\"object\"){return}for(var key in opt){if(opt.hasOwnProperty(key'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663322998, "stop": 1586663322998, "uuid": "ad9648a9-6dc0-478f-ac78-ebe713588f11", "historyId": "b3a1f6d3b07200bac50beb821b4e3703", "testCaseId": "1a84b5fa1cd8fc91bc1e7f314e541701", "fullName": "allure.test#test_excel", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}