{"name": "test_excel[ /^(http[s]?:\\/\\/)?([^\\/]+)(.*)/,\n        matches = url.match(reg);\n        url = list.hasOwnProperty(matches[2])&&(list[matches]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b' /^(http[s]...(list[matches' == '<Response [200]>'\n  +b' /^(http[s]?:\\\\/\\\\/)?([^\\\\/]+)(.*)/,\\n        matches = url.match(reg);\\n        url = list.hasOwnProperty(matches[2])&&(list[matches'\n  -'<Response [200]>'", "trace": "data = b' /^(http[s]?:\\\\/\\\\/)?([^\\\\/]+)(.*)/,\\n        matches = url.match(reg);\\n        url = list.hasOwnProperty(matches[2])&&(list[matches'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       AssertionError: assert b' /^(http[s]...(list[matches' == '<Response [200]>'\nE         +b' /^(http[s]?:\\\\/\\\\/)?([^\\\\/]+)(.*)/,\\n        matches = url.match(reg);\\n        url = list.hasOwnProperty(matches[2])&&(list[matches'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663322560, "stop": 1586663322560, "uuid": "da6f7360-0ee7-4b47-9753-1d775c002ada", "historyId": "4bc5eb9465912a17de2ad4bba460a84f", "testCaseId": "84f43b383ffe5ff7137f5dd849c5388c", "fullName": "allure.test#test_excel[ /^(http[s]?:\\/\\/)?([^\\/]+)(.*)/,\n        matches = url.match(reg);\n        url = list.hasOwnProperty(matches[2])&&(list", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}