{"name": "flask", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'response': ...ployees/page'} == '{\"code\": 0}'\n  +{'response': '请求发送失败，详细信息： url=https://provider.info.eleme.test/employees/page'}\n  -'{\"code\": 0}'", "trace": "self = <scripts.test_case.Test_case object at 0x10ded6e50>, case = {'case_expect': '{\"code\": 0}', 'case_id': 'asc-0008', 'case_method': 'GET', 'case_module': 'flask', ...}\n\n    @pytest.mark.parametrize('case', ExcelHandler().get_excel_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n        allure.dynamic.title(case['case_module'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['case_url'], case['case_id']))\n        allure.dynamic.feature(case['case_module'])\n        allure.dynamic.story(case['case_method'])\n>       assert response[0] == response[1]\nE       assert {'response': ...ployees/page'} == '{\"code\": 0}'\nE         +{'response': '请求发送失败，详细信息： url=https://provider.info.eleme.test/employees/page'}\nE         -'{\"code\": 0}'\n\nscripts/test_case.py:34: AssertionError"}, "description": "<font color=\"red\">请求URL：</font>https://provider.info.eleme.test/employees/page<br /><font color=\"red\">期望值：</font>asc-0008", "attachments": [{"name": "log", "source": "800020e8-adfc-4102-b750-7d7d52557d69-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'asc-0008', 'case_module': 'flask', 'case_url': 'https://provider.info.eleme.test/employees/page', 'isRun': 'RUN', 'case_method': 'GET', 'case_params': '{\\n    \"pageSize\": 1,\\n    \"pageNumber\": 2\\n}', 'case_expect': '{\"code\": 0}', 'case_result_code': '', 'case_result_message': '', 'code': 200.0, 'message': ''}"}], "start": 1587031742941, "stop": 1587031742995, "uuid": "ea6074d7-cbf7-4b60-b62c-e4e7a05bb21b", "historyId": "fac1fcb6ccb71c4ed49bb5fbd5696efb", "testCaseId": "ea02412fdf50230ea9175db2c24ad2e1", "fullName": "scripts.test_case.Test_case#test_case", "labels": [{"name": "feature", "value": "flask"}, {"name": "story", "value": "GET"}, {"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "Test_case"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "31670-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_case"}]}