{
  "uid" : "f024a572cbf0d10d",
  "name" : "flask",
  "fullName" : "scripts.test_case.Test_case#test_case",
  "historyId" : "2267bb04dfeab26bec94c39d05e91380",
  "time" : {
    "start" : 1586834050876,
    "stop" : 1586834050886,
    "duration" : 10
  },
  "description" : "<font color=\"red\">请求URL：</font>127.0.0.1:8888/login?name=yuhang&pwd=123<br /><font color=\"red\">期望值：</font>asc-0003",
  "descriptionHtml" : "<p><font color=\"red\">请求URL：</font>127.0.0.1:8888/login?name=yuhang&amp;pwd=123<br /><font color=\"red\">期望值：</font>asc-0003</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'response': ...hang&pwd=123'} == '{\"code\": -1,...e\": \"账号密码错误\"}'\n  +{'response': '请求发送失败，详细信息： url=http://127.0.0.1:8888/login?name=yuhang&pwd=123'}\n  -'{\"code\": -1, \"message\": \"账号密码错误\"}'",
  "statusTrace" : "self = <scripts.test_case.Test_case object at 0x107752e10>\ncase = {'expect': '{\"code\": -1, \"message\": \"账号密码错误\"}', 'id': 'asc-0003', 'isRun': 'RUN', 'method': 'POST', ...}\n\n    @pytest.mark.parametrize('case', ExcelHandler().get_excel_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n        allure.dynamic.title(case['module'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['url'], case['id']))\n        allure.dynamic.feature(case['module'])\n        allure.dynamic.story(case['method'])\n>       assert response[0] == response[1]\nE       assert {'response': ...hang&pwd=123'} == '{\"code\": -1,...e\": \"账号密码错误\"}'\nE         +{'response': '请求发送失败，详细信息： url=http://127.0.0.1:8888/login?name=yuhang&pwd=123'}\nE         -'{\"code\": -1, \"message\": \"账号密码错误\"}'\n\nscripts/test_case.py:34: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1586834050587,
      "stop" : 1586834050587,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "<font color=\"red\">请求URL：</font>127.0.0.1:8888/login?name=yuhang&pwd=123<br /><font color=\"red\">期望值：</font>asc-0003",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'response': ...hang&pwd=123'} == '{\"code\": -1,...e\": \"账号密码错误\"}'\n  +{'response': '请求发送失败，详细信息： url=http://127.0.0.1:8888/login?name=yuhang&pwd=123'}\n  -'{\"code\": -1, \"message\": \"账号密码错误\"}'",
    "statusTrace" : "self = <scripts.test_case.Test_case object at 0x107752e10>\ncase = {'expect': '{\"code\": -1, \"message\": \"账号密码错误\"}', 'id': 'asc-0003', 'isRun': 'RUN', 'method': 'POST', ...}\n\n    @pytest.mark.parametrize('case', ExcelHandler().get_excel_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n        allure.dynamic.title(case['module'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['url'], case['id']))\n        allure.dynamic.feature(case['module'])\n        allure.dynamic.story(case['method'])\n>       assert response[0] == response[1]\nE       assert {'response': ...hang&pwd=123'} == '{\"code\": -1,...e\": \"账号密码错误\"}'\nE         +{'response': '请求发送失败，详细信息： url=http://127.0.0.1:8888/login?name=yuhang&pwd=123'}\nE         -'{\"code\": -1, \"message\": \"账号密码错误\"}'\n\nscripts/test_case.py:34: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cbcb8a2c04ddc51",
      "name" : "log",
      "source" : "cbcb8a2c04ddc51.txt",
      "type" : "text/plain",
      "size" : 160
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1586834053361,
      "stop" : 1586834065113,
      "duration" : 11752
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "flask"
  }, {
    "name" : "story",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "Test_case"
  }, {
    "name" : "host",
    "value" : "localhost"
  }, {
    "name" : "thread",
    "value" : "73581-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'id': 'asc-0003', 'module': 'flask', 'url': '127.0.0.1:8888/login?name=yuhang&pwd=123', 'isRun': 'RUN', 'method': 'POST', 'params': '', 'expect': '{\"code\": -1, \"message\": \"账号密码错误\"}', 'result_code': '', 'result_message': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f024a572cbf0d10d.json",
  "parameterValues" : [ "{'id': 'asc-0003', 'module': 'flask', 'url': '127.0.0.1:8888/login?name=yuhang&pwd=123', 'isRun': 'RUN', 'method': 'POST', 'params': '', 'expect': '{\"code\": -1, \"message\": \"账号密码错误\"}', 'result_code': '', 'result_message': ''}" ]
}