{
  "uid" : "d1e6d67c7e90ee6f",
  "name" : "flask",
  "fullName" : "scripts.test_case.Test_case#test_case",
  "historyId" : "51ae1c76f8ea3094e3747b8418d98cbf",
  "time" : {
    "start" : 1586840897030,
    "stop" : 1586840897031,
    "duration" : 1
  },
  "description" : "<font color=\"red\">请求URL：</font>baidu.com<br /><font color=\"red\">期望值：</font>asc-0006",
  "descriptionHtml" : "<p><font color=\"red\">请求URL：</font>baidu.com<br /><font color=\"red\">期望值：</font>asc-0006</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=baidu.com'}\n  -200.0",
  "statusTrace" : "self = <scripts.test_case.Test_case object at 0x105598cd0>, case = {'case_expect': 200.0, 'case_id': 'asc-0006', 'case_method': 'POST', 'case_module': 'flask', ...}\n\n    @pytest.mark.parametrize('case', ExcelHandler().get_excel_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n        allure.dynamic.title(case['case_module'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['case_url'], case['case_id']))\n        allure.dynamic.feature(case['case_module'])\n        allure.dynamic.story(case['case_method'])\n>       assert response[0] == response[1]\nE       AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\nE         +{'response': '请求发送失败，详细信息： url=baidu.com'}\nE         -200.0\n\nscripts/test_case.py:34: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1586840895582,
      "stop" : 1586840895582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "<font color=\"red\">请求URL：</font>baidu.com<br /><font color=\"red\">期望值：</font>asc-0006",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=baidu.com'}\n  -200.0",
    "statusTrace" : "self = <scripts.test_case.Test_case object at 0x105598cd0>, case = {'case_expect': 200.0, 'case_id': 'asc-0006', 'case_method': 'POST', 'case_module': 'flask', ...}\n\n    @pytest.mark.parametrize('case', ExcelHandler().get_excel_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n        allure.dynamic.title(case['case_module'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['case_url'], case['case_id']))\n        allure.dynamic.feature(case['case_module'])\n        allure.dynamic.story(case['case_method'])\n>       assert response[0] == response[1]\nE       AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\nE         +{'response': '请求发送失败，详细信息： url=baidu.com'}\nE         -200.0\n\nscripts/test_case.py:34: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f31d97b7044a0bc9",
      "name" : "log",
      "source" : "f31d97b7044a0bc9.txt",
      "type" : "text/plain",
      "size" : 122
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1586840897036,
      "stop" : 1586840904546,
      "duration" : 7510
    },
    "status" : "broken",
    "statusMessage" : "NameError: name 'mail_pass' is not defined\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.7/site-packages/allure_commons/_allure.py\", line 185, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/usr/local/lib/python3.7/site-packages/_pytest/fixtures.py\", line 800, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.7/site-packages/_pytest/python.py\", line 707, in xunit_setup_class_fixture\n    _call_with_optional_argument(func, self.obj)\n  File \"/usr/local/lib/python3.7/site-packages/_pytest/python.py\", line 634, in _call_with_optional_argument\n    func(arg)\n  File \"/Users/sonic/Project/Python/Pytest/scripts/test_case.py\", line 41, in teardown_class\n    EmailHandler().send_email()\n  File \"/Users/sonic/Project/Python/Pytest/uti/EmailHandler.py\", line 59, in send_email\n    smtp_obj.login(mail_user, mail_pass)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "flask"
  }, {
    "name" : "story",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "Test_case"
  }, {
    "name" : "host",
    "value" : "localhost"
  }, {
    "name" : "thread",
    "value" : "77306-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'case_id': 'asc-0006', 'case_module': 'flask', 'case_url': 'baidu.com', 'isRun': 'RUN', 'case_method': 'POST', 'case_params': '', 'case_expect': 200.0, 'case_result_code': '', 'case_result_message': ''}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "db9970d55cfa84bc",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586840720663,
        "stop" : 1586840720664,
        "duration" : 1
      }
    }, {
      "uid" : "f136399504b4bc37",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586840470595,
        "stop" : 1586840470598,
        "duration" : 3
      }
    }, {
      "uid" : "20299f355bf4b971",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'ç\\x99¾åº¦ä¸\\...x9f¥é\\x81\\x93' == 200.0\n  +'ç\\x99¾åº¦ä¸\\x80ä¸\\x8bï¼\\x8cä½\\xa0å°±ç\\x9f¥é\\x81\\x93'\n  -200.0",
      "time" : {
        "start" : 1586839777213,
        "stop" : 1586839777422,
        "duration" : 209
      }
    }, {
      "uid" : "1674ce1eb8adb85",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'ç\\x99¾åº¦ä¸\\...x9f¥é\\x81\\x93' == 200.0\n  +'ç\\x99¾åº¦ä¸\\x80ä¸\\x8bï¼\\x8cä½\\xa0å°±ç\\x9f¥é\\x81\\x93'\n  -200.0",
      "time" : {
        "start" : 1586836000093,
        "stop" : 1586836000563,
        "duration" : 470
      }
    }, {
      "uid" : "2677cbc979a3e58a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...rl=baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835934382,
        "stop" : 1586835934385,
        "duration" : 3
      }
    }, {
      "uid" : "9b60cb6db67a85bc",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_description'",
      "time" : {
        "start" : 1586835901182,
        "stop" : 1586835901182,
        "duration" : 0
      }
    }, {
      "uid" : "4e6efec5cc38c57c",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_mudule'",
      "time" : {
        "start" : 1586835860611,
        "stop" : 1586835860612,
        "duration" : 1
      }
    }, {
      "uid" : "9d2692b3793c8fe4",
      "status" : "broken",
      "statusDetails" : "KeyError: 'module'",
      "time" : {
        "start" : 1586835816975,
        "stop" : 1586835816975,
        "duration" : 0
      }
    }, {
      "uid" : "8ebbedbcf985882a",
      "status" : "broken",
      "statusDetails" : "KeyError: 'module'",
      "time" : {
        "start" : 1586835795528,
        "stop" : 1586835795528,
        "duration" : 0
      }
    }, {
      "uid" : "3bb6e17cfd372385",
      "status" : "broken",
      "statusDetails" : "KeyError: 'module'",
      "time" : {
        "start" : 1586835753525,
        "stop" : 1586835753525,
        "duration" : 0
      }
    }, {
      "uid" : "a9b6b5290b35fc6",
      "status" : "broken",
      "statusDetails" : "KeyError: 'module'",
      "time" : {
        "start" : 1586835529314,
        "stop" : 1586835529316,
        "duration" : 2
      }
    }, {
      "uid" : "30026c0fffab6b87",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835369877,
        "stop" : 1586835369956,
        "duration" : 79
      }
    }, {
      "uid" : "cf76492f0c8784a9",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835301616,
        "stop" : 1586835301707,
        "duration" : 91
      }
    }, {
      "uid" : "12254ac2d4589a10",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835271779,
        "stop" : 1586835271859,
        "duration" : 80
      }
    }, {
      "uid" : "45e3dffb87e97a45",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835106897,
        "stop" : 1586835107233,
        "duration" : 336
      }
    }, {
      "uid" : "81a2ffd0d2074914",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586835004329,
        "stop" : 1586835004330,
        "duration" : 1
      }
    }, {
      "uid" : "2f9b5c67e419273",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586834757223,
        "stop" : 1586834757304,
        "duration" : 81
      }
    }, {
      "uid" : "24ce74a3659886ab",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == 200.0\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -200.0",
      "time" : {
        "start" : 1586834612742,
        "stop" : 1586834612817,
        "duration" : 75
      }
    }, {
      "uid" : "2065447e7540476a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...://baidu.com'} == '{\"code\": 100...\": \"参数不能为空！\"}'\n  +{'response': '请求发送失败，详细信息： url=http://baidu.com'}\n  -'{\"code\": 10003, \"message\": \"参数不能为空！\"}'",
      "time" : {
        "start" : 1586834053258,
        "stop" : 1586834053355,
        "duration" : 97
      }
    }, {
      "uid" : "971185a29ae7892e",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...promote/page'} == '{\"code\": 200...\": \"success\"}'\n  +{'response': '请求发送失败，详细信息： url=http:///employees/promote/page'}\n  -'{\"code\": 200, \"message\": \"success\"}'",
      "time" : {
        "start" : 1586832979358,
        "stop" : 1586832979359,
        "duration" : 1
      }
    }, {
      "uid" : "73e15b43d4393db4",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...promote/page'} == '{\"code\": 200...\": \"success\"}'\n  +{'response': '请求发送失败，详细信息： url=http:///employees/promote/page'}\n  -'{\"code\": 200, \"message\": \"success\"}'",
      "time" : {
        "start" : 1586832919887,
        "stop" : 1586832919888,
        "duration" : 1
      }
    }, {
      "uid" : "a75ea9727681a4a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'response': ...promote/page'} == '{\"code\": 200...\": \"success\"}'\n  +{'response': '请求发送失败，详细信息： url=http:///employees/promote/page'}\n  -'{\"code\": 200, \"message\": \"success\"}'",
      "time" : {
        "start" : 1586832781191,
        "stop" : 1586832781191,
        "duration" : 0
      }
    }, {
      "uid" : "cc088717e19216a1",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_project'",
      "time" : {
        "start" : 1586832528161,
        "stop" : 1586832528162,
        "duration" : 1
      }
    }, {
      "uid" : "6db4f3c032a8f705",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_project'",
      "time" : {
        "start" : 1586832434562,
        "stop" : 1586832434563,
        "duration" : 1
      }
    }, {
      "uid" : "3d795af93ed6047d",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_project'",
      "time" : {
        "start" : 1586832153648,
        "stop" : 1586832153651,
        "duration" : 3
      }
    }, {
      "uid" : "954fe08d0634855c",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_project'",
      "time" : {
        "start" : 1586831905985,
        "stop" : 1586831905987,
        "duration" : 2
      }
    }, {
      "uid" : "3341a33fa2edb63",
      "status" : "broken",
      "statusDetails" : "KeyError: 'case_expect'",
      "time" : {
        "start" : 1586831458061,
        "stop" : 1586831458061,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d1e6d67c7e90ee6f.json",
  "parameterValues" : [ "{'case_id': 'asc-0006', 'case_module': 'flask', 'case_url': 'baidu.com', 'isRun': 'RUN', 'case_method': 'POST', 'case_params': '', 'case_expect': 200.0, 'case_result_code': '', 'case_result_message': ''}" ]
}