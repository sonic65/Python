{"name": "test_excel[eof config!==\"object\"){return}require.config(config);for(var item in config){if(config.hasOwnProperty(item)){if(!amd[item]){amd[]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'eof config!...d[item]){amd[' == '<Response [200]>'\n  +b'eof config!==\"object\"){return}require.config(config);for(var item in config){if(config.hasOwnProperty(item)){if(!amd[item]){amd['\n  -'<Response [200]>'", "trace": "data = b'eof config!==\"object\"){return}require.config(config);for(var item in config){if(config.hasOwnProperty(item)){if(!amd[item]){amd['\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b'eof config!...d[item]){amd[' == '<Response [200]>'\nE         +b'eof config!==\"object\"){return}require.config(config);for(var item in config){if(config.hasOwnProperty(item)){if(!amd[item]){amd['\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663323022, "stop": 1586663323022, "uuid": "2a72ded8-0593-4e79-a173-edb61c4919e0", "historyId": "791372bdfee9a356e246508aa05b5fce", "testCaseId": "7eae5f26905cebbb30ac4b01cffbfc33", "fullName": "allure.test#test_excel[eof config!==\"object\"){return}require.config(config);for(var item in config){if(config.hasOwnProperty(item)){if(!amd[item]){amd", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}