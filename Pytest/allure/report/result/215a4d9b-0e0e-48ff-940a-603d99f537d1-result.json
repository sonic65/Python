{"name": "test_excel[s_tab\").find(\"a\");a&&a.length>0&&a.each(function(t,e){e.innerHTML&&e.innerHTML.match(/æ°é»/)&&(e.innerHTML=\"èµè®¯\",e.href=\"//]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b's_tab\").fin...f\",e.href=\"//' == '<Response [200]>'\n  +b's_tab\").find(\"a\");a&&a.length>0&&a.each(function(t,e){e.innerHTML&&e.innerHTML.match(/\\xe6\\x96\\xb0\\xe9\\x97\\xbb/)&&(e.innerHTML=\"\\xe8\\xb5\\x84\\xe8\\xae\\xaf\",e.href=\"//'\n  -'<Response [200]>'", "trace": "data = b's_tab\").find(\"a\");a&&a.length>0&&a.each(function(t,e){e.innerHTML&&e.innerHTML.match(/\\xe6\\x96\\xb0\\xe9\\x97\\xbb/)&&(e.innerHTML=\"\\xe8\\xb5\\x84\\xe8\\xae\\xaf\",e.href=\"//'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b's_tab\").fin...f\",e.href=\"//' == '<Response [200]>'\nE         +b's_tab\").find(\"a\");a&&a.length>0&&a.each(function(t,e){e.innerHTML&&e.innerHTML.match(/\\xe6\\x96\\xb0\\xe9\\x97\\xbb/)&&(e.innerHTML=\"\\xe8\\xb5\\x84\\xe8\\xae\\xaf\",e.href=\"//'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663322984, "stop": 1586663322984, "uuid": "dc32ee8a-642a-4d0e-8967-8f3773c4ff7c", "historyId": "69059b4bf38b072a6dda5e24c18a58fc", "testCaseId": "1a84b5fa1cd8fc91bc1e7f314e541701", "fullName": "allure.test#test_excel", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}