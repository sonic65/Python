{"name": "test_excel[_blank\">ç¾åº¦æ¨å¹¿</a></p><p class=\"lh\"><a href=\"//www.baidu.com/duty\" target=\"_blank\">ä½¿ç¨ç¾åº¦åå¿è¯»</a></p><p class=\"]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'_blank\">\\xe.../p><p class=\"' == '<Response [200]>'\n  +b'_blank\">\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe6\\x8e\\xa8\\xe5\\xb9\\xbf</a></p><p class=\"lh\"><a href=\"//www.baidu.com/duty\" target=\"_blank\">\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe5\\x89\\x8d\\xe5\\xbf\\x85\\xe8\\xaf\\xbb</a></p><p class=\"'\n  -'<Response [200]>'", "trace": "data = b'_blank\">\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe6\\x8e\\xa8\\xe5\\xb9\\xbf</a></p><p class=\"lh\"><a href=\"//www.baidu.com/duty\" target=\"_blank\">\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe5\\x89\\x8d\\xe5\\xbf\\x85\\xe8\\xaf\\xbb</a></p><p class=\"'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b'_blank\">\\xe.../p><p class=\"' == '<Response [200]>'\nE         +b'_blank\">\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe6\\x8e\\xa8\\xe5\\xb9\\xbf</a></p><p class=\"lh\"><a href=\"//www.baidu.com/duty\" target=\"_blank\">\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe5\\x89\\x8d\\xe5\\xbf\\x85\\xe8\\xaf\\xbb</a></p><p class=\"'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663321515, "stop": 1586663321515, "uuid": "14f73d55-10a4-4d97-9aee-724669b399b6", "historyId": "e9c8f6e24034b5842a863e44856efb0a", "testCaseId": "1a84b5fa1cd8fc91bc1e7f314e541701", "fullName": "allure.test#test_excel", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}