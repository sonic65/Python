{"name": "test_excel[&&(o=RegExp.$1),/NR=(\\d+)/.test(i)&&(t=RegExp.$1),options.hasOwnProperty(\"resultNum\")&&(t=options.resultNum),options.hasOwnPrope]", "status": "failed", "statusDetails": {"message": "AssertionError: assert b'&&(o=RegExp...s.hasOwnPrope' == '<Response [200]>'\n  +b'&&(o=RegExp.$1),/NR=(\\\\d+)/.test(i)&&(t=RegExp.$1),options.hasOwnProperty(\"resultNum\")&&(t=options.resultNum),options.hasOwnPrope'\n  -'<Response [200]>'", "trace": "data = b'&&(o=RegExp.$1),/NR=(\\\\d+)/.test(i)&&(t=RegExp.$1),options.hasOwnProperty(\"resultNum\")&&(t=options.resultNum),options.hasOwnPrope'\n\n    @pytest.mark.parametrize('data', ExcelHandler.get_excel_data(1))\n    def test_excel(data):\n>       assert data == '<Response [200]>'\nE       assert b'&&(o=RegExp...s.hasOwnPrope' == '<Response [200]>'\nE         +b'&&(o=RegExp.$1),/NR=(\\\\d+)/.test(i)&&(t=RegExp.$1),options.hasOwnProperty(\"resultNum\")&&(t=options.resultNum),options.hasOwnPrope'\nE         -'<Response [200]>'\n\ntest.py:16: AssertionError"}, "parameters": [{"name": "data", "value": "<class 'bytes'>"}], "start": 1586663322728, "stop": 1586663322728, "uuid": "97e0f237-1217-40a9-bf60-b12c7a777567", "historyId": "3e1df9c6afb8f94ddddcd581679163e5", "testCaseId": "1a84b5fa1cd8fc91bc1e7f314e541701", "fullName": "allure.test#test_excel", "labels": [{"name": "parentSuite", "value": "allure"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "42329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure.test"}]}